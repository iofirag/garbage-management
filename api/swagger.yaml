swagger: "2.0"
info:
  title: Garbage Managing API
  description: Swagger test api
  version: "1.0.0"
host: "localhost:3088"
basePath: "/api/v1"
paths:

  /healthCheck:
    get:
      x-swagger-router-controller: "health.controller"
      operationId: "healthCheck"
      description: "Health check"
      responses:
        200:
          description: health good
        400:
          description: health bad

  /addGarbage:
    put:
      x-swagger-router-controller: "garbage.controller"
      operationId: "create"
      description: "Create new garbage"
      parameters:
        - in: body
          name: "newGarbageData"
          description: "The request parameters for creating garbage"
          required: true
          schema: 
            $ref: '#/definitions/newGarbageData'
      responses:
        200:
          description: success create garbage

  /getById/{id}:
    get:
      x-swagger-router-controller: "garbage.controller"
      operationId: "getById"
      description: "Get garbage by id"
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          description: success get garbage by id
        400:
          description: missing id

  /deleteById/{id}:
    delete:
      x-swagger-router-controller: "garbage.controller"
      operationId: "_delete"
      description: "Delete garbage by id"
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        200:
          description: delete garbage completed

  /updateByLocation/{id}:
    post:
      x-swagger-router-controller: "garbage.controller"
      operationId: "updateFieldById"
      description: "Update location by garbage id"
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: updateLocationData
          required: true
          schema:
            $ref: '#/definitions/updateLocationData'
      responses:
        200:
          description: update garbage location success

  /updateByEmptyDate/{id}:
    post:
      x-swagger-router-controller: "garbage.controller"
      operationId: "updateFieldById"
      description: "Update empty-date by garbage id"
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: updateEmptyDateData
          required: true
          schema:
            $ref: '#/definitions/updateEmptyDateData'
      responses:
        200:
          description: create garbage emptyDate success

  /getByLocationRange:
    get:
      x-swagger-router-controller: "garbage.controller"
      operationId: "getByLocationRange"
      description: "Get all by location range"
      parameters:
        - in: query
          name: lat
          type: number
          required: true
        - in: query
          name: lon
          type: number
          required: true
        - in: query
          name: kmDistance
          type: number
      responses:
        200:
          description: get by location completed
          
  /getByEmptyDate:
    get:
      x-swagger-router-controller: "garbage.controller"
      operationId: "getByEmptyDate"
      description: "Get all by empty date"
      parameters:
        - in: query
          name: emptyDate
          type: number
          required: true
      responses:
        200:
          description: get by emptyDate completed
  
  /getAll:
    get:
      x-swagger-router-controller: "garbage.controller"
      operationId: "getAll"
      description: "Get all garbages"
      responses:
        200:
          description: get All

definitions:
  newGarbageData:
    type: object
    required: 
      - color
      - type
      - location
      - emptyDate
    properties:
      color: 
        type: string
      type:
        type: number
      location:
        $ref: '#/definitions/locationData'
      emptyDate:
        type: number

  updateLocationData:
    type: object
    required:
      - field
      - value
    properties:
      field:
        type: string
        default: location
      value:
        $ref: '#/definitions/locationData'
    
  updateEmptyDateData:
    type: object
    required:
      - field
      - value
    properties:
      field:
        type: string
        default: emptyDate
      value:
        type: number

  locationData:
    type: object
    required: 
      - lat
      - lon
    properties:
      lat: 
        type: number
      lon:
        type: number